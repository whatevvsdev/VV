#version 460

layout (local_size_x = 16, local_size_y = 16) in;

layout(rgba16f,set = 0, binding = 0) uniform image2D image;

layout( push_constant ) uniform PushConstants
{
	mat4 camera_matrix;
} push_constants;

vec3 generate_pinhole_ray_direction(ivec2 image_size, mat4 matrix)
{
	const float fov = 90.0f;

	float tan_half_angle = tan(radians(fov) / 2.0f);
	float aspect_scale = image_size.y / 2.0f;
  
	vec2 pixel = vec2(gl_GlobalInvocationID.xy) + vec2(0.5f) - (image_size / 2.0f);
  
	vec3 direction = normalize(vec3(vec2(pixel.x, -pixel.y) * tan_half_angle / aspect_scale, -1));
  
	return (matrix * vec4(direction, 0.0f)).xyz;
}

void main()
{
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(image);

    vec3 direction = generate_pinhole_ray_direction(size, push_constants.camera_matrix);
    imageStore(image, texelCoord, vec4(direction, 1.0f));
}
